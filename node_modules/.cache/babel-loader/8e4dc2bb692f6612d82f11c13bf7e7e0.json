{"ast":null,"code":"var _jsxFileName = \"E:\\\\My-Projects\\\\React\\\\my-app -learn2\\\\src\\\\components\\\\hooks\\\\HookCounter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HookCounter() {\n  _s();\n\n  const initialVal = 0;\n  const [count, setCount] = useState(initialVal);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), \"Count \", count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment By  1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Decrement By 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment By 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HookCounter, \"v2hRhGVjYyl7nfJvc8XOgDDC3Yk=\");\n\n_c = HookCounter;\nexport default HookCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookCounter\");","map":{"version":3,"names":["React","useState","HookCounter","initialVal","count","setCount"],"sources":["E:/My-Projects/React/my-app -learn2/src/components/hooks/HookCounter.js"],"sourcesContent":["import React , {useState} from 'react'\r\n\r\nfunction HookCounter() {\r\n  const initialVal = 0;\r\n  const [count , setCount] = useState(initialVal);\r\n  return (\r\n    <div>\r\n        <p></p>Count {count}\r\n      <button onClick={() => setCount(count + 1)}>Increment By  1</button>\r\n      <button onClick={() => setCount(count + 1)}>Decrement By 2</button>\r\n      <button onClick={() => setCount(count + 1)}>Increment By 5</button>\r\n      <button onClick={() => setCount(count + 1)}>Reset</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HookCounter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACrB,MAAMC,UAAU,GAAG,CAAnB;EACA,MAAM,CAACC,KAAD,EAASC,QAAT,IAAqBJ,QAAQ,CAACE,UAAD,CAAnC;EACA,oBACE;IAAA,wBACI;MAAA;MAAA;MAAA;IAAA,QADJ,YACkBC,KADlB,eAEE;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAZQF,W;;KAAAA,W;AAcT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}