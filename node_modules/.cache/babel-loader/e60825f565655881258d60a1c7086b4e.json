{"ast":null,"code":"import React, { Component } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PropsRender extends Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementCount = () => {\n      this.setState(prevState => {\n        return {\n          count: prevState.count + 1\n        };\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.render(this.state.count, this.incrementCount)\n    }, void 0, false);\n  }\n\n}\n\nexport default PropsRender;","map":{"version":3,"names":["React","Component","PropsRender","constructor","props","incrementCount","setState","prevState","count","state","render"],"sources":["E:/My-Projects/React/my-app -learn2/src/components/PropsRender.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass PropsRender extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n  incrementCount = () => {\r\n    this.setState((prevState) => {\r\n      return { count: prevState.count + 1 };\r\n    });\r\n  };\r\n  render() {\r\n    return <>{this.props.render(this.state.count, this.incrementCount)}</>;\r\n  }\r\n}\r\n\r\nexport default PropsRender;\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;EAClCE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAMnBC,cANmB,GAMF,MAAM;MACrB,KAAKC,QAAL,CAAeC,SAAD,IAAe;QAC3B,OAAO;UAAEC,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;QAA3B,CAAP;MACD,CAFD;IAGD,CAVkB;;IAEjB,KAAKC,KAAL,GAAa;MACXD,KAAK,EAAE;IADI,CAAb;EAGD;;EAMDE,MAAM,GAAG;IACP,oBAAO;MAAA,UAAG,KAAKN,KAAL,CAAWM,MAAX,CAAkB,KAAKD,KAAL,CAAWD,KAA7B,EAAoC,KAAKH,cAAzC;IAAH,iBAAP;EACD;;AAdiC;;AAiBpC,eAAeH,WAAf"},"metadata":{},"sourceType":"module"}