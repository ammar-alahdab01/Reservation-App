{"ast":null,"code":"import _slicedToArray from \"E:\\\\My-Projects\\\\React\\\\my-app -learn2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\My-Projects\\\\React\\\\my-app -learn2\\\\src\\\\components\\\\hooks\\\\HookTimerUsingRef.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nfunction HookTimerUsingRef() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    time = _useState2[0],\n    setTimer = _useState2[1];\n  var intervalRef = useRef(null);\n  useEffect(function () {\n    intervalRef.current = setInterval(function () {\n      setTimer(function (prevTime) {\n        return prevTime + 1;\n      });\n    }, 1000);\n    return function () {\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"HookTimer - \", time, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return clearInterval(intervalRef.current);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Clear interval\"));\n}\nexport default HookTimerUsingRef;","map":{"version":3,"names":["React","useEffect","useRef","useState","HookTimerUsingRef","_useState","_useState2","_slicedToArray","time","setTimer","intervalRef","current","setInterval","prevTime","clearInterval","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["E:/My-Projects/React/my-app -learn2/src/components/hooks/HookTimerUsingRef.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction HookTimerUsingRef() {\r\n  const [time, setTimer] = useState(0);\r\n  const intervalRef = useRef(null);\r\n  useEffect(() => {\r\n    intervalRef.current = setInterval(() => {\r\n      setTimer((prevTime) => prevTime + 1);\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(intervalRef.current);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      HookTimer - {time}\r\n      <button onClick={() => clearInterval(intervalRef.current)}>Clear interval</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HookTimerUsingRef;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE1D,SAASC,iBAAiBA,CAAA,EAAG;EAAA,IAAAC,SAAA,GACFF,QAAQ,CAAC,CAAC,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACrB,IAAMI,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;EAChCD,SAAS,CAAC,YAAM;IACdS,WAAW,CAACC,OAAO,GAAGC,WAAW,CAAC,YAAM;MACtCH,QAAQ,CAAC,UAACI,QAAQ;QAAA,OAAKA,QAAQ,GAAG,CAAC;MAAA,EAAC;IACtC,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,YAAM;MACXC,aAAa,CAACJ,WAAW,CAACC,OAAO,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,oBACEX,KAAA,CAAAe,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,cACS,EAACb,IAAI,eACjBR,KAAA,CAAAe,aAAA;IAAQO,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMR,aAAa,CAACJ,WAAW,CAACC,OAAO,CAAC;IAAA,CAAC;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAc,CAAS,CAC9E;AAEV;AAEA,eAAejB,iBAAiB"},"metadata":{},"sourceType":"module"}